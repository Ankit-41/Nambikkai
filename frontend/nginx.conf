# --- HTTP: keep ACME and redirect everything else ---
server {
  listen 80;
  server_name home.nambikkairehab.in;

  # ACME challenge files (Certbot)
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # Redirect the rest to HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# --- HTTPS: serve app & proxy API ---
server {
  listen 443 ssl http2;
  server_name home.nambikkairehab.in;

  # issued by Certbot
  ssl_certificate     /etc/letsencrypt/live/home.nambikkairehab.in/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/home.nambikkairehab.in/privkey.pem;

  # sane TLS defaults
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  # Optional: enable HSTS after you confirm HTTPS works
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  root /usr/share/nginx/html;
  index index.html;

  # Proxy API to backend container (your screenshot shows backend:5000)
  location /api/ {
    proxy_pass http://backend:5000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # SPA fallback
  location / {
    try_files $uri /index.html;
  }
}
